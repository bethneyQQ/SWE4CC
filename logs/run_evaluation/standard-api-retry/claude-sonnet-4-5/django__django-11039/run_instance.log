2025-10-04 21:37:57,206 - INFO - Creating container for django__django-11039...
2025-10-04 21:38:01,869 - INFO - Container for django__django-11039 created: 757a611748c06a70aa08d892ea17bddca0e941e754ab76cbfc1b10c30e4087d3
2025-10-04 21:38:01,990 - INFO - Container for django__django-11039 started: 757a611748c06a70aa08d892ea17bddca0e941e754ab76cbfc1b10c30e4087d3
2025-10-04 21:38:01,990 - INFO - Intermediate patch for django__django-11039 written to logs/run_evaluation/standard-api-retry/claude-sonnet-4-5/django__django-11039/patch.diff, now applying to container...
2025-10-04 21:38:02,069 - INFO - Failed to apply patch to container: git apply --verbose
2025-10-04 21:38:02,120 - INFO - Failed to apply patch to container: git apply --verbose --reject
2025-10-04 21:38:02,154 - INFO - >>>>> Applied Patch:
patching file django/core/management/commands/sqlmigrate.py
Hunk #1 succeeded at 55 with fuzz 4 (offset -4 lines).
patching file tests/migrations/test_commands.py
Hunk #1 succeeded at 1291 with fuzz 2 (offset -407 lines).

2025-10-04 21:38:02,741 - INFO - Git diff before:
diff --git a/django/core/management/commands/sqlmigrate.py b/django/core/management/commands/sqlmigrate.py
index f0b663222a..b51d1739a4 100644
--- a/django/core/management/commands/sqlmigrate.py
+++ b/django/core/management/commands/sqlmigrate.py
@@ -56,7 +56,7 @@ class Command(BaseCommand):
         targets = [(app_label, migration.name)]
 
         # Show begin/end around output only for atomic migrations
-        self.output_transaction = migration.atomic
+        self.output_transaction = migration.atomic and connection.features.can_rollback_ddl
 
         # Make a plan that represents just the requested migrations and show SQL
         # for it
diff --git a/tests/migrations/test_commands.py b/tests/migrations/test_commands.py
index 0e8fa9fdd1..5f164475d7 100644
--- a/tests/migrations/test_commands.py
+++ b/tests/migrations/test_commands.py
@@ -1291,6 +1291,28 @@ class MakeMigrationsTests(MigrationTestBase):
                 self.assertFalse(os.path.exists(merge_file))
             self.assertIn("No conflicts detected to merge.", out.getvalue())
 
+    @override_settings(MIGRATION_MODULES={"migrations": "migrations.test_migrations"})
+    def test_sqlmigrate_no_transactional_ddl(self):
+        """
+        sqlmigrate doesn't wrap output in BEGIN/COMMIT if the database
+        doesn't support transactional DDL.
+        """
+        out = io.StringIO()
+        with mock.patch.object(
+            connection.features, "can_rollback_ddl", False
+        ):
+            call_command(
+                "sqlmigrate",
+                "migrations",
+                "0001",
+                stdout=out,
+            )
+        output = out.getvalue().lower()
+        # No transaction wrapping for databases that don't support
+        # transactional DDL.
+        self.assertNotIn("begin;", output)
+        self.assertNotIn("commit;", output)
+
     @override_settings(
         INSTALLED_APPS=[
             "migrations.migrations_test_apps.migrated_app",
2025-10-04 21:38:02,741 - INFO - Eval script for django__django-11039 written to logs/run_evaluation/standard-api-retry/claude-sonnet-4-5/django__django-11039/eval.sh; copying to container...
2025-10-04 21:38:11,288 - INFO - Test runtime: 8.50 seconds
2025-10-04 21:38:11,288 - INFO - Test output for django__django-11039 written to logs/run_evaluation/standard-api-retry/claude-sonnet-4-5/django__django-11039/test_output.txt
2025-10-04 21:38:11,335 - INFO - Git diff after:
diff --git a/django/core/management/commands/sqlmigrate.py b/django/core/management/commands/sqlmigrate.py
index f0b663222a..b51d1739a4 100644
--- a/django/core/management/commands/sqlmigrate.py
+++ b/django/core/management/commands/sqlmigrate.py
@@ -56,7 +56,7 @@ class Command(BaseCommand):
         targets = [(app_label, migration.name)]
 
         # Show begin/end around output only for atomic migrations
-        self.output_transaction = migration.atomic
+        self.output_transaction = migration.atomic and connection.features.can_rollback_ddl
 
         # Make a plan that represents just the requested migrations and show SQL
         # for it
2025-10-04 21:38:11,335 - INFO - Git diff changed after running eval script
2025-10-04 21:38:11,335 - INFO - Grading answer for django__django-11039...
2025-10-04 21:38:11,337 - INFO - report: {'django__django-11039': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': True, 'tests_status': {'FAIL_TO_PASS': {'success': ['test_sqlmigrate_for_non_transactional_databases (migrations.test_commands.MigrateTests)'], 'failure': []}, 'PASS_TO_PASS': {'success': ['test_makemigrations_app_name_specified_as_label (migrations.test_commands.AppLabelErrorTests)', 'test_makemigrations_nonexistent_app_label (migrations.test_commands.AppLabelErrorTests)', 'test_migrate_app_name_specified_as_label (migrations.test_commands.AppLabelErrorTests)', 'test_migrate_nonexistent_app_label (migrations.test_commands.AppLabelErrorTests)', 'test_showmigrations_app_name_specified_as_label (migrations.test_commands.AppLabelErrorTests)', 'test_showmigrations_nonexistent_app_label (migrations.test_commands.AppLabelErrorTests)', 'test_sqlmigrate_app_name_specified_as_label (migrations.test_commands.AppLabelErrorTests)', 'test_sqlmigrate_nonexistent_app_label (migrations.test_commands.AppLabelErrorTests)', 'test_squashmigrations_app_name_specified_as_label (migrations.test_commands.AppLabelErrorTests)', 'test_squashmigrations_nonexistent_app_label (migrations.test_commands.AppLabelErrorTests)', "--squashed-name specifies the new migration's name.", '--squashed-name also works if a start migration is omitted.', 'test_squashmigrations_initial_attribute (migrations.test_commands.SquashMigrationsTests)', 'test_squashmigrations_invalid_start (migrations.test_commands.SquashMigrationsTests)', 'test_squashmigrations_optimizes (migrations.test_commands.SquashMigrationsTests)', 'test_squashmigrations_squashes (migrations.test_commands.SquashMigrationsTests)', 'test_squashmigrations_valid_start (migrations.test_commands.SquashMigrationsTests)', 'test_ticket_23799_squashmigrations_no_optimize (migrations.test_commands.SquashMigrationsTests)', 'test_failing_migration (migrations.test_commands.MakeMigrationsTests)', 'test_files_content (migrations.test_commands.MakeMigrationsTests)', 'test_makemigration_merge_dry_run (migrations.test_commands.MakeMigrationsTests)', 'test_makemigration_merge_dry_run_verbosity_3 (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_auto_now_add_interactive (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_check (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_conflict_exit (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_consistency_checks_respect_routers (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_default_merge_name (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_disabled_migrations_for_app (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_dry_run (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_dry_run_verbosity_3 (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_empty_connections (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_empty_migration (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_empty_no_app_specified (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_handle_merge (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_inconsistent_history (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_interactive_accept (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_interactive_by_default (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_interactive_reject (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_merge_dont_output_dependency_operations (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_merge_no_conflict (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_migration_path_output (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_migration_path_output_valueerror (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_migrations_announce (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_migrations_modules_nonexistent_toplevel_package (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_migrations_modules_path_not_exist (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_no_apps_initial (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_no_changes (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_no_changes_no_apps (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_no_common_ancestor (migrations.test_commands.MakeMigrationsTests)', 'Migration directories without an __init__.py file are allowed.', 'test_makemigrations_non_interactive_no_field_rename (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_non_interactive_no_model_rename (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_non_interactive_not_null_addition (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_non_interactive_not_null_alteration (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_order (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_unspecified_app_with_conflict_merge (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_unspecified_app_with_conflict_no_merge (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_with_custom_name (migrations.test_commands.MakeMigrationsTests)', 'test_makemigrations_with_invalid_custom_name (migrations.test_commands.MakeMigrationsTests)', 'test_ambigious_prefix (migrations.test_commands.MigrateTests)', 'test_app_without_migrations (migrations.test_commands.MigrateTests)', 'test_migrate (migrations.test_commands.MigrateTests)', 'test_migrate_conflict_exit (migrations.test_commands.MigrateTests)', 'test_migrate_fake_initial (migrations.test_commands.MigrateTests)', 'test_migrate_fake_split_initial (migrations.test_commands.MigrateTests)', 'test_migrate_inconsistent_history (migrations.test_commands.MigrateTests)', 'test_migrate_initial_false (migrations.test_commands.MigrateTests)', 'Tests migrate --plan output.', 'test_migrate_record_replaced (migrations.test_commands.MigrateTests)', 'test_migrate_record_squashed (migrations.test_commands.MigrateTests)', 'test_migrate_syncdb_app_label (migrations.test_commands.MigrateTests)', 'test_migrate_syncdb_app_with_migrations (migrations.test_commands.MigrateTests)', 'test_migrate_syncdb_deferred_sql_executed_with_schemaeditor (migrations.test_commands.MigrateTests)', 'test_migrate_with_system_checks (migrations.test_commands.MigrateTests)', 'test_regression_22823_unmigrated_fk_to_migrated_model (migrations.test_commands.MigrateTests)', 'test_showmigrations_list (migrations.test_commands.MigrateTests)', 'test_showmigrations_no_migrations (migrations.test_commands.MigrateTests)', 'test_showmigrations_plan (migrations.test_commands.MigrateTests)', 'test_showmigrations_plan_app_label_no_migrations (migrations.test_commands.MigrateTests)', 'test_showmigrations_plan_multiple_app_labels (migrations.test_commands.MigrateTests)', 'test_showmigrations_plan_no_migrations (migrations.test_commands.MigrateTests)', 'test_showmigrations_plan_single_app_label (migrations.test_commands.MigrateTests)', 'test_showmigrations_plan_squashed (migrations.test_commands.MigrateTests)', 'test_showmigrations_unmigrated_app (migrations.test_commands.MigrateTests)', 'test_sqlmigrate_backwards (migrations.test_commands.MigrateTests)', 'test_sqlmigrate_for_non_atomic_migration (migrations.test_commands.MigrateTests)', 'test_sqlmigrate_forwards (migrations.test_commands.MigrateTests)', 'test_unknown_prefix (migrations.test_commands.MigrateTests)'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-11039: resolved: True
2025-10-04 21:38:11,337 - INFO - Attempting to stop container sweb.eval.django__django-11039.standard-api-retry...
2025-10-04 21:38:26,452 - INFO - Attempting to remove container sweb.eval.django__django-11039.standard-api-retry...
2025-10-04 21:38:26,466 - INFO - Container sweb.eval.django__django-11039.standard-api-retry removed.
2025-10-04 21:38:26,467 - INFO - Attempting to remove image swebench/sweb.eval.x86_64.django_1776_django-11039:latest...
2025-10-04 21:38:26,620 - INFO - Image swebench/sweb.eval.x86_64.django_1776_django-11039:latest removed.
