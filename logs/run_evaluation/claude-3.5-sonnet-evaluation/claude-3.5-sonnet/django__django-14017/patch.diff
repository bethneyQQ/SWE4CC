
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -41,7 +41,12 @@
 
     def _combine(self, other, conn):
         if not isinstance(other, Q):
-            raise TypeError(other)
+            # Allow combining with Exists and other expressions that have
+            # a resolve_expression method.
+            if not hasattr(other, 'resolve_expression'):
+                raise TypeError(other)
+            # Wrap the other expression in a Q object.
+            other = Q(other)
 
         # If the other Q() is empty, ignore it and just use `self`.
         if not other:
@@ -64,6 +69,12 @@
     def __and__(self, other):
         return self._combine(other, self.AND)
 
+    def __rand__(self, other):
+        return self._combine(other, self.AND)
+
+    def __ror__(self, other):
+        return self._combine(other, self.OR)
+
     def __invert__(self):
         obj = type(self)()
         obj.add(self, self.AND)
