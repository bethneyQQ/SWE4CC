
--- a/django/contrib/admin/checks.py
+++ b/django/contrib/admin/checks.py
@@ -893,24 +893,36 @@ class ModelAdminChecks(BaseModelAdminChecks):
     def _check_list_display_item(self, obj, item, label):
         if callable(item):
             return []
         elif hasattr(obj, item):
             return []
+        
         try:
             field = obj.model._meta.get_field(item)
         except FieldDoesNotExist:
+            # Check if item is an attribute on the model
             try:
                 field = getattr(obj.model, item)
             except AttributeError:
                 return [
                     checks.Error(
                         "The value of '%s' refers to '%s', which is not a "
                         "callable, an attribute of '%s', or an attribute or "
                         "method on '%s'."
                         % (
                             label,
                             item,
                             obj.__class__.__name__,
                             obj.model._meta.label,
                         ),
                         obj=obj.__class__,
                         id="admin.E108",
                     )
                 ]
+            # Check if the attribute is a reverse relation manager
+            # (ManyToOneRel or ManyToManyRel descriptor)
+            if hasattr(field, 'rel') and hasattr(field.rel, 'related_name'):
+                # This is a reverse relation descriptor, not allowed in list_display
+                return [
+                    checks.Error(
+                        "The value of '%s' refers to '%s', which is not a "
+                        "callable, an attribute of '%s', or an attribute or "
+                        "method on '%s'."
+                        % (
+                            label,
+                            item,
+                            obj.__class__.__name__,
+                            obj.model._meta.label,
+                        ),
+                        obj=obj.__class__,
+                        id="admin.E108",
+                    )
+                ]
+            return []
+        
         if isinstance(field, models.ManyToManyField) or (
             getattr(field, "rel", None) and field.rel.field.many_to_one
         ):
