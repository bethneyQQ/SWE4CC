
--- a/sympy/geometry/util.py
+++ b/sympy/geometry/util.py
@@ -13,7 +13,7 @@
 from __future__ import division, print_function
 
 from sympy import Function, Symbol, solve
-from sympy.core.compatibility import (
+from sympy.core.compatibility import (
     is_sequence, range, string_types, ordered)
 from sympy.core.containers import OrderedSet
 from .point import Point, Point2D
@@ -565,14 +565,22 @@
     sympy.core.function.diff: explicitly differentiates wrt symbols
 
     """
+    from sympy.core.relational import Equality
+    
+    # Handle Eq objects by converting to expression form
+    if isinstance(eq, Equality):
+        eq = eq.lhs - eq.rhs
+    
     if is_sequence(y):
         dep = set(y)
         y = y[0]
     elif isinstance(y, Symbol):
         dep = {y}
+    elif isinstance(y, Function):
+        dep = {y}
     else:
-        raise ValueError("expecting x-dependent symbol(s) but got: %s" % y)
-
+        raise ValueError("expecting x-dependent symbol(s) or function but got: %s" % y)
+    
     f = dict([(s, Function(
         s.name)(x)) for s in eq.free_symbols if s != x and s in dep])
     dydx = Function(y.name)(x).diff(x)
