
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -835,9 +835,12 @@
         ops = connection.ops
         max_batch_size = max(ops.bulk_batch_size(fields, objs), 1)
         batch_size = min(batch_size, max_batch_size) if batch_size else max_batch_size
         inserted_rows = []
         bulk_return = connection.features.can_return_rows_from_bulk_insert
         for item in [objs[i : i + batch_size] for i in range(0, len(objs), batch_size)]:
-            if bulk_return and on_conflict is None:
+            if bulk_return and (
+                on_conflict is None or on_conflict == OnConflict.UPDATE
+            ):
                 inserted_rows.extend(
                     self._insert(
                         item,
@@ -847,6 +850,8 @@
                     )
                 )
             else:
                 self._insert(
                     item,
                     fields=fields,
@@ -812,7 +812,9 @@
                 connection = connections[self.db]
                 if (
                     connection.features.can_return_rows_from_bulk_insert
-                    and on_conflict is None
+                    and (
+                        on_conflict is None or on_conflict == OnConflict.UPDATE
+                    )
                 ):
                     assert len(returned_columns) == len(objs_without_pk)
                 for obj_without_pk, results in zip(objs_without_pk, returned_columns):
