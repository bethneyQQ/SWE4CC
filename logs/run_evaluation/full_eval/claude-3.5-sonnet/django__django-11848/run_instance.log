2025-10-03 19:32:13,857 - INFO - Creating container for django__django-11848...
2025-10-03 19:32:34,032 - INFO - Container for django__django-11848 created: d37d7704d1a6ed8697cc1b5ef42796101eae3fb7d21e73e8483b44221c924db6
2025-10-03 19:32:34,131 - INFO - Container for django__django-11848 started: d37d7704d1a6ed8697cc1b5ef42796101eae3fb7d21e73e8483b44221c924db6
2025-10-03 19:32:34,131 - INFO - Intermediate patch for django__django-11848 written to logs/run_evaluation/full_eval/claude-3.5-sonnet/django__django-11848/patch.diff, now applying to container...
2025-10-03 19:32:34,227 - INFO - >>>>> Applied Patch:
Checking patch django/utils/http.py...
Applied patch django/utils/http.py cleanly.

2025-10-03 19:32:34,790 - INFO - Git diff before:
diff --git a/django/utils/http.py b/django/utils/http.py
index 572cfb4347..8289522111 100644
--- a/django/utils/http.py
+++ b/django/utils/http.py
@@ -176,10 +176,17 @@ def parse_http_date(date):
     try:
         year = int(m.group('year'))
         if year < 100:
-            if year < 70:
-                year += 2000
-            else:
+            # According to RFC 7231, interpret a two-digit year that appears
+            # to be more than 50 years in the future as representing the most
+            # recent year in the past that had the same last two digits.
+            current_year = datetime.datetime.utcnow().year
+            current_century = current_year - (current_year % 100)
+            year_in_current_century = current_century + year
+            if year_in_current_century - current_year > 50:
+                # More than 50 years in the future, use previous century
                 year += 1900
+            else:
+                year = year_in_current_century
         month = MONTHS.index(m.group('mon').lower()) + 1
         day = int(m.group('day'))
         hour = int(m.group('hour'))
2025-10-03 19:32:34,790 - INFO - Eval script for django__django-11848 written to logs/run_evaluation/full_eval/claude-3.5-sonnet/django__django-11848/eval.sh; copying to container...
2025-10-03 19:32:41,453 - INFO - Test runtime: 6.62 seconds
2025-10-03 19:32:41,453 - INFO - Test output for django__django-11848 written to logs/run_evaluation/full_eval/claude-3.5-sonnet/django__django-11848/test_output.txt
2025-10-03 19:32:41,498 - INFO - Git diff after:
diff --git a/django/utils/http.py b/django/utils/http.py
index 572cfb4347..8289522111 100644
--- a/django/utils/http.py
+++ b/django/utils/http.py
@@ -176,10 +176,17 @@ def parse_http_date(date):
     try:
         year = int(m.group('year'))
         if year < 100:
-            if year < 70:
-                year += 2000
-            else:
+            # According to RFC 7231, interpret a two-digit year that appears
+            # to be more than 50 years in the future as representing the most
+            # recent year in the past that had the same last two digits.
+            current_year = datetime.datetime.utcnow().year
+            current_century = current_year - (current_year % 100)
+            year_in_current_century = current_century + year
+            if year_in_current_century - current_year > 50:
+                # More than 50 years in the future, use previous century
                 year += 1900
+            else:
+                year = year_in_current_century
         month = MONTHS.index(m.group('mon').lower()) + 1
         day = int(m.group('day'))
         hour = int(m.group('hour'))
2025-10-03 19:32:41,498 - INFO - Grading answer for django__django-11848...
2025-10-03 19:32:41,498 - INFO - report: {'django__django-11848': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': True, 'tests_status': {'FAIL_TO_PASS': {'success': ['test_parsing_rfc850 (utils_tests.test_http.HttpDateProcessingTests)', 'test_parsing_year_less_than_70 (utils_tests.test_http.HttpDateProcessingTests)'], 'failure': []}, 'PASS_TO_PASS': {'success': ['test_input_too_large (utils_tests.test_http.Base36IntTests)', 'test_invalid_literal (utils_tests.test_http.Base36IntTests)', 'test_negative_input (utils_tests.test_http.Base36IntTests)', 'test_roundtrip (utils_tests.test_http.Base36IntTests)', 'test_to_base36_errors (utils_tests.test_http.Base36IntTests)', 'test_to_int_errors (utils_tests.test_http.Base36IntTests)', 'test_values (utils_tests.test_http.Base36IntTests)', 'test (utils_tests.test_http.EscapeLeadingSlashesTests)', 'test_quote (utils_tests.test_http.URLQuoteTests)', 'test_quote_plus (utils_tests.test_http.URLQuoteTests)', 'test_unquote (utils_tests.test_http.URLQuoteTests)', 'test_unquote_plus (utils_tests.test_http.URLQuoteTests)', 'test_parsing (utils_tests.test_http.ETagProcessingTests)', 'test_quoting (utils_tests.test_http.ETagProcessingTests)', 'test_allowed_hosts_str (utils_tests.test_http.IsSafeURLTests)', 'test_bad_urls (utils_tests.test_http.IsSafeURLTests)', 'test_basic_auth (utils_tests.test_http.IsSafeURLTests)', 'test_good_urls (utils_tests.test_http.IsSafeURLTests)', 'test_is_safe_url_deprecated (utils_tests.test_http.IsSafeURLTests)', 'test_no_allowed_hosts (utils_tests.test_http.IsSafeURLTests)', 'test_secure_param_https_urls (utils_tests.test_http.IsSafeURLTests)', 'test_secure_param_non_https_urls (utils_tests.test_http.IsSafeURLTests)', 'test_bad (utils_tests.test_http.IsSameDomainTests)', 'test_good (utils_tests.test_http.IsSameDomainTests)', 'test_roundtrip (utils_tests.test_http.URLSafeBase64Tests)', 'test_http_date (utils_tests.test_http.HttpDateProcessingTests)', 'test_parsing_asctime (utils_tests.test_http.HttpDateProcessingTests)', 'test_parsing_rfc1123 (utils_tests.test_http.HttpDateProcessingTests)', 'test_custom_iterable_not_doseq (utils_tests.test_http.URLEncodeTests)', 'test_dict (utils_tests.test_http.URLEncodeTests)', 'test_dict_containing_empty_sequence_doseq (utils_tests.test_http.URLEncodeTests)', 'test_dict_containing_sequence_doseq (utils_tests.test_http.URLEncodeTests)', 'test_dict_containing_sequence_not_doseq (utils_tests.test_http.URLEncodeTests)', 'test_dict_containing_tuple_not_doseq (utils_tests.test_http.URLEncodeTests)', 'test_dict_with_bytearray (utils_tests.test_http.URLEncodeTests)', 'test_dict_with_bytes_values (utils_tests.test_http.URLEncodeTests)', 'test_dict_with_sequence_of_bytes (utils_tests.test_http.URLEncodeTests)', 'test_generator (utils_tests.test_http.URLEncodeTests)', 'test_multivaluedict (utils_tests.test_http.URLEncodeTests)', 'test_none (utils_tests.test_http.URLEncodeTests)', 'test_none_in_generator (utils_tests.test_http.URLEncodeTests)', 'test_none_in_sequence (utils_tests.test_http.URLEncodeTests)', 'test_tuples (utils_tests.test_http.URLEncodeTests)'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-11848: resolved: True
2025-10-03 19:32:41,498 - INFO - Attempting to stop container sweb.eval.django__django-11848.full_eval...
2025-10-03 19:32:56,637 - INFO - Attempting to remove container sweb.eval.django__django-11848.full_eval...
2025-10-03 19:32:56,652 - INFO - Container sweb.eval.django__django-11848.full_eval removed.
2025-10-03 19:32:56,652 - INFO - Attempting to remove image swebench/sweb.eval.x86_64.django_1776_django-11848:latest...
2025-10-03 19:32:57,647 - INFO - Image swebench/sweb.eval.x86_64.django_1776_django-11848:latest removed.
