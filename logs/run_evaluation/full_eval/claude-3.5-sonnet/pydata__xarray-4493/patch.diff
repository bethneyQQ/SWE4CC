
--- a/xarray/core/variable.py
+++ b/xarray/core/variable.py
@@ -113,6 +113,7 @@ def as_variable(obj, name=None):
     from .dataarray import DataArray
 
     # TODO: consider extending this method to automatically handle Iris and
+    # other array types
     if isinstance(obj, DataArray):
         # extract the primary Variable from DataArrays
         obj = obj.variable
@@ -217,8 +218,13 @@ def as_compatible_data(data, fastpath=False):
     if isinstance(data, timedelta):
         data = np.timedelta64(getattr(data, "value", data), "ns")
 
-    # we don't want nested self-described arrays
-    data = getattr(data, "values", data)
+    # we don't want nested self-described arrays, but we need to be careful
+    # not to trigger computation of lazy arrays (like dask)
+    if isinstance(data, xr.DataArray):
+        # for DataArray, use .data to preserve dask arrays
+        data = data.data
+    else:
+        data = getattr(data, "values", data)
 
     if isinstance(data, np.ma.MaskedArray):
         mask = np.ma.getmaskarray(data)
