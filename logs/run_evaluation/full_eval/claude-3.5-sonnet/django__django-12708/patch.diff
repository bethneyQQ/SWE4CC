
--- a/django/db/backends/base/schema.py
+++ b/django/db/backends/base/schema.py
@@ -402,10 +402,18 @@ class BaseDatabaseSchemaEditor:
     def _delete_composed_index(self, model, fields, constraint_kwargs, sql):
         meta_constraint_names = {constraint.name for constraint in model._meta.constraints}
         meta_index_names = {constraint.name for constraint in model._meta.indexes}
         columns = [model._meta.get_field(field).column for field in fields]
-        constraint_names = self._constraint_names(
-            model, columns, exclude=meta_constraint_names | meta_index_names,
-            **constraint_kwargs
-        )
+        # When deleting an index, exclude unique constraints to avoid finding
+        # unique_together constraints on the same fields. When deleting a unique
+        # constraint, exclude non-unique indexes.
+        if constraint_kwargs.get('index'):
+            constraint_names = self._constraint_names(
+                model, columns, exclude=meta_constraint_names | meta_index_names,
+                unique=False, **constraint_kwargs
+            )
+        else:
+            constraint_names = self._constraint_names(
+                model, columns, exclude=meta_constraint_names | meta_index_names,
+                **constraint_kwargs
+            )
         if len(constraint_names) != 1:
             raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
                 len(constraint_names),
