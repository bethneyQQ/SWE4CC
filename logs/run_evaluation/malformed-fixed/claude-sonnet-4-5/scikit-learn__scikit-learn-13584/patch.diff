--- a/sklearn/utils/_pprint.py
+++ b/sklearn/utils/_pprint.py
@@ -65,6 +65,7 @@
 
 from inspect import signature
 import pprint
+import numpy as np
 from collections import OrderedDict
 
 from ..base import BaseEstimator
@@ -87,6 +88,23 @@ class KeyValTupleParam(KeyValTuple):
 def _changed_params(estimator):
     """Return dict (param_name: value) of parameters that were given to
     estimator with non-default values."""
+
+    def _is_same_value(a, b):
+        """Check if two values are equal, handling arrays and NaN values."""
+        # Handle NaN values
+        if is_scalar_nan(a) and is_scalar_nan(b):
+            return True
+        # Handle numpy arrays and other array-like objects
+        if isinstance(a, np.ndarray) or isinstance(b, np.ndarray):
+            try:
+                return np.array_equal(a, b)
+            except TypeError:
+                # If array_equal fails, fall back to regular comparison
+                pass
+        # Regular comparison for scalars and other types
+        try:
+            return a == b
+        except (ValueError, TypeError):
+            return False
 
     params = estimator.get_params(deep=False)
     filtered_params = {}
@@ -95,8 +113,7 @@ def _changed_params(estimator):
     init_params = signature(init_func).parameters
     init_params = {name: param.default for name, param in init_params.items()}
     for k, v in params.items():
-        if (v != init_params[k] and
-                not (is_scalar_nan(init_params[k]) and is_scalar_nan(v))):
+        if not _is_same_value(v, init_params[k]):
             filtered_params[k] = v
     return filtered_params
 
 
 
 
