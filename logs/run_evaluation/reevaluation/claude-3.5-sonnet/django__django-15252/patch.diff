--- a/django/db/migrations/recorder.py
+++ b/django/db/migrations/recorder.py
@@ -1,4 +1,5 @@
 from django.apps.registry import Apps
+from django.db import router
 from django.db import models
 from django.db.utils import DatabaseError
 from django.utils.functional import classproperty
@@ -61,11 +62,18 @@
         """
         Ensure the table exists and has the correct schema.
         """
+        # If the router doesn't allow migration on this database, don't create
+        # the table.
+        if not router.allow_migrate(self.connection.alias, self.Migration):
+            return
         # If the table's there, that's fine - we've never changed its schema
         # in the codebase.
         if self.has_table():
             return
         # Make the table
+        # Check router again in case has_table() caused any side effects
+        if not router.allow_migrate(self.connection.alias, self.Migration):
+            return
         try:
             with self.connection.schema_editor() as editor:
                 editor.create_model(self.Migration)
@@ -79,6 +87,11 @@
         """
         Return a dict mapping (app_name, migration_name) to Migration instances
         for all applied migrations.
+        """
+        # If migrations aren't allowed on this database, return an empty dict.
+        if not router.allow_migrate(self.connection.alias, self.Migration):
+            return {}
+        if not self.has_table():
+            return {}
+        return {
+            (migration.app, migration.name): migration
 
 