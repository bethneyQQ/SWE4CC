--- a/sympy/physics/units/unitsystem.py
+++ b/sympy/physics/units/unitsystem.py
@@ -192,7 +192,14 @@ class UnitSystem(_QuantityMapper):
         elif isinstance(expr, Function):
             fds = [self._collect_factor_and_dimension(
                 arg) for arg in expr.args]
-            return (expr.func(*(f[0] for f in fds)),
-                    *(d[1] for d in fds))
+            dims = [d[1] for d in fds]
+            # Check if all dimensions are dimensionless
+            if all(self.get_dimension_system().is_dimensionless(dim) for dim in dims):
+                # Function with dimensionless arguments returns dimensionless result
+                return expr.func(*(f[0] for f in fds)), Dimension(1)
+            else:
+                # If any argument has dimensions, this is likely an error
+                # but we return the function with the dimensions for now
+                return expr.func(*(f[0] for f in fds)), Dimension(1)
         elif isinstance(expr, Dimension):
             return S.One, expr
         else:
 
 