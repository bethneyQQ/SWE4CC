--- a/sympy/combinatorics/permutations.py
+++ b/sympy/combinatorics/permutations.py
@@ -895,9 +895,18 @@
         # counting starts from 1.
 
         temp = flatten(args)
-        if has_dups(temp):
-            if is_cycle:
+        if is_cycle:
+            # Check for duplicates within each individual cycle
+            for c in args:
+                if has_dups(c):
+                    raise ValueError('there were repeated elements within a cycle; to resolve '
+                    'cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))
+            # Non-disjoint cycles are allowed - they will be applied left-to-right
+        else:
+            # For array form, duplicates are not allowed
+            if has_dups(temp):
                 raise ValueError('there were repeated elements; to resolve '
                 'cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))
             else:
                 raise ValueError('there were repeated elements.')
         temp = set(temp)
 
 