--- a/sklearn/decomposition/kernel_pca.py
+++ b/sklearn/decomposition/kernel_pca.py
@@ -11,6 +11,7 @@ from ..utils import check_random_state
 from ..utils.validation import check_is_fitted, check_array
 from ..exceptions import NotFittedError
 from ..base import BaseEstimator, TransformerMixin, _UnstableOn32BitMixin
+from ..utils.extmath import svd_flip
 from ..preprocessing import KernelCenterer
 from ..metrics.pairwise import pairwise_kernels
 
@@ -214,6 +215,9 @@ class KernelPCA(BaseEstimator, TransformerMixin, _UnstableOn32BitMixin):
         indices = self.lambdas_.argsort()[::-1]
         self.lambdas_ = self.lambdas_[indices]
         self.alphas_ = self.alphas_[:, indices]
+
+        # flip eigenvectors' sign to enforce deterministic output
+        self.alphas_, _ = svd_flip(self.alphas_, np.empty_like(self.alphas_.T))
 
         # remove eigenvectors with a zero eigenvalue
         if self.remove_zero_eig or self.n_components is None:
 
 
