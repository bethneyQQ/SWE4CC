--- a/sympy/polys/polyoptions.py
+++ b/sympy/polys/polyoptions.py
@@ -405,8 +405,8 @@ class Domain(with_metaclass(OptionType, Option)):
     _re_realfield = re.compile(r"^(R|RR)(_(\d+))?$")
     _re_complexfield = re.compile(r"^(C|CC)(_(\d+))?$")
     _re_finitefield = re.compile(r"^(FF|GF)\((\d+)\)$")
-    _re_polynomial = re.compile(r"^(Z|ZZ|Q|QQ)\[(.+)\]$")
-    _re_fraction = re.compile(r"^(Z|ZZ|Q|QQ)\((.+)\)$")
+    _re_polynomial = re.compile(r"^(Z|ZZ|Q|QQ|R|RR|C|CC)\[(.+)\]$")
+    _re_fraction = re.compile(r"^(Z|ZZ|Q|QQ|R|RR|C|CC)\((.+)\)$")
     _re_algebraic = re.compile(r"^(Q|QQ)\<(.+)\>$")
 
     @classmethod
@@ -459,8 +459,12 @@ class Domain(with_metaclass(OptionType, Option)):
 
             if ground in ['Z', 'ZZ']:
                 return sympy.polys.domains.ZZ.poly_ring(*gens)
-            else:
+            elif ground in ['Q', 'QQ']:
                 return sympy.polys.domains.QQ.poly_ring(*gens)
+            elif ground in ['R', 'RR']:
+                return sympy.polys.domains.RR.poly_ring(*gens)
+            else:
+                return sympy.polys.domains.CC.poly_ring(*gens)
 
         r = cls._re_fraction.match(domain)
 
@@ -471,8 +475,12 @@ class Domain(with_metaclass(OptionType, Option)):
 
             if ground in ['Z', 'ZZ']:
                 return sympy.polys.domains.ZZ.frac_field(*gens)
-            else:
+            elif ground in ['Q', 'QQ']:
                 return sympy.polys.domains.QQ.frac_field(*gens)
+            elif ground in ['R', 'RR']:
+                return sympy.polys.domains.RR.frac_field(*gens)
+            else:
+                return sympy.polys.domains.CC.frac_field(*gens)
 
         r = cls._re_algebraic.match(domain)
 
 
 
