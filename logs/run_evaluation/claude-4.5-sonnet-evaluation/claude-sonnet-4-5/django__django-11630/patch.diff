--- a/django/core/checks/model_checks.py
+++ b/django/core/checks/model_checks.py
@@ -3,8 +3,9 @@ import types
 from collections import defaultdict
 from itertools import chain
 
 from django.apps import apps
-from django.core.checks import Error, Tags, register
+from django.conf import settings
+from django.core.checks import Error, Tags, Warning, register
 
 
 @register(Tags.models)
@@ -37,12 +38,17 @@ def check_all_models(app_configs=None, **kwargs):
             constraints[model_constraint.name].append(model._meta.label)
     for db_table, model_labels in db_table_models.items():
         if len(model_labels) != 1:
-            errors.append(
-                Error(
-                    "db_table '%s' is used by multiple models: %s."
-                    % (db_table, ', '.join(db_table_models[db_table])),
-                    obj=db_table,
-                    id='models.E028',
+            model_labels_str = ', '.join(db_table_models[db_table])
+            # If DATABASE_ROUTERS is configured, models in different apps may
+            # legitimately have the same db_table if they're in different databases.
+            error_class = Warning if settings.DATABASE_ROUTERS else Error
+            error_id = 'models.W035' if settings.DATABASE_ROUTERS else 'models.E028'
+            errors.append(
+                error_class(
+                    "db_table '%s' is used by multiple models: %s."
+                    % (db_table, model_labels_str),
+                    obj=db_table,
+                    id=error_id,
                 )
             )
     for index_name, model_labels in indexes.items():
 
 
