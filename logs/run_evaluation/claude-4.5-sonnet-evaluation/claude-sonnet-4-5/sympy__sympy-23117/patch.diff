--- a/sympy/tensor/array/ndim_array.py
+++ b/sympy/tensor/array/ndim_array.py
@@ -195,7 +195,12 @@ class NDimArray(Printable):
                 return [pointer], ()
 
             result = []
-            elems, shapes = zip(*[f(i) for i in pointer])
+            items = [f(i) for i in pointer]
+            if not items:
+                # Empty iterable case: return empty list with shape (0,)
+                return [], (0,)
+            
+            elems, shapes = zip(*items)
             if len(set(shapes)) != 1:
                 raise ValueError("could not determine shape unambiguously")
             for i in elems:
 
 
