--- a/sklearn/cluster/_affinity_propagation.py
+++ b/sklearn/cluster/_affinity_propagation.py
@@ -150,6 +150,8 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,
     # Execute parallel affinity propagation updates
     e = np.zeros((n_samples, convergence_iter))
 
+    converged = False
+
     ind = np.arange(n_samples)
 
     for it in range(max_iter):
@@ -193,13 +195,14 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,
             se = np.sum(e, axis=1)
             unconverged = (np.sum((se == convergence_iter) + (se == 0))
                            != n_samples)
-            if (not unconverged and (K > 0)) or (it == max_iter):
+            if not unconverged and (K > 0):
+                converged = True
                 if verbose:
                     print("Converged after %d iterations." % it)
                 break
     else:
         if verbose:
             print("Did not converge")
 
     I = np.flatnonzero(E)
     K = I.size  # Identify exemplars
@@ -220,7 +223,7 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,
         cluster_centers_indices = np.unique(labels)
         labels = np.searchsorted(cluster_centers_indices, labels)
     else:
-        warnings.warn("Affinity propagation did not converge, this model "
+        if converged:
+            warnings.warn("Affinity propagation did not converge, this model "
                       "will not have any cluster centers.", ConvergenceWarning)
         labels = np.array([-1] * n_samples)
         cluster_centers_indices = []
 
 
