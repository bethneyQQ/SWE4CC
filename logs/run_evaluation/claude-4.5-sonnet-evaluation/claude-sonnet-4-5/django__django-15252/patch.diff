--- a/django/db/migrations/recorder.py
+++ b/django/db/migrations/recorder.py
@@ -1,5 +1,5 @@
 from django.apps.registry import Apps
-from django.db import DatabaseError, models
+from django.db import DatabaseError, models, router
 from django.utils.functional import classproperty
 from django.utils.timezone import now
 
@@ -59,6 +59,9 @@ class MigrationRecorder:
     def ensure_schema(self):
         """Ensure the table exists and has the correct schema."""
         # If the table's there, that's fine - we've never changed its schema
         # in the codebase.
         if self.has_table():
             return
+        # Make the table only if migrations are allowed for this database.
+        if not router.allow_migrate_model(self.connection.alias, self.Migration):
+            return
         # Make the table
         try:
             with self.connection.schema_editor() as editor:
@@ -84,12 +87,16 @@ class MigrationRecorder:
     def record_applied(self, app, name):
         """Record that a migration was applied."""
+        if not router.allow_migrate_model(self.connection.alias, self.Migration):
+            return
         self.ensure_schema()
         self.migration_qs.create(app=app, name=name)
 
     def record_unapplied(self, app, name):
         """Record that a migration was unapplied."""
+        if not router.allow_migrate_model(self.connection.alias, self.Migration):
+            return
         self.ensure_schema()
         self.migration_qs.filter(app=app, name=name).delete()
 
     def flush(self):
 
 
